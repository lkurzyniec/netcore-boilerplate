// <auto-generated />
using System;
using HappyCode.NetCoreBoilerplate.Core;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HappyCode.NetCoreBoilerplate.Core.Migrations
{
    [DbContext(typeof(EmployeesContext))]
    partial class EmployeesContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("HappyCode.NetCoreBoilerplate.Core.Models.Department", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("NEWID()");

                    b.Property<string>("DeptName")
                        .IsRequired()
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("varchar(40)");

                    b.Property<Guid>("MangerId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("MangerId");

                    b.ToTable("departments", "employees");
                });

            modelBuilder.Entity("HappyCode.NetCoreBoilerplate.Core.Models.Employee", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("NEWID()");

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeptId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("DeptId");

                    b.ToTable("employees", "employees");
                });

            modelBuilder.Entity("HappyCode.NetCoreBoilerplate.Core.Models.Department", b =>
                {
                    b.HasOne("HappyCode.NetCoreBoilerplate.Core.Models.Employee", "Manger")
                        .WithMany("LeadingDepartments")
                        .HasForeignKey("MangerId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired()
                        .HasConstraintName("departments_ibfk_1");

                    b.Navigation("Manger");
                });

            modelBuilder.Entity("HappyCode.NetCoreBoilerplate.Core.Models.Employee", b =>
                {
                    b.HasOne("HappyCode.NetCoreBoilerplate.Core.Models.Department", "Department")
                        .WithMany("Employees")
                        .HasForeignKey("DeptId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("employees_ibfk_1");

                    b.Navigation("Department");
                });

            modelBuilder.Entity("HappyCode.NetCoreBoilerplate.Core.Models.Department", b =>
                {
                    b.Navigation("Employees");
                });

            modelBuilder.Entity("HappyCode.NetCoreBoilerplate.Core.Models.Employee", b =>
                {
                    b.Navigation("LeadingDepartments");
                });
#pragma warning restore 612, 618
        }
    }
}
